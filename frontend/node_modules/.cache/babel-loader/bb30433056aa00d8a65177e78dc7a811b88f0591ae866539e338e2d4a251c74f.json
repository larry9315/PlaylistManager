{"ast":null,"code":"var _jsxFileName = \"/Users/larrypark/Projects/PlaylistManager/PlaylistManager/frontend/src/components/Home.js\",\n  _s = $RefreshSig$();\n// src/components/Home.js\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport \"./../styles/Home.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [youtubePlaylists, setYouTubePlaylists] = useState([]);\n  const [spotifyPlaylists, setSpotifyPlaylists] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleYouTubeLogin = () => {\n    window.location.href = \"https://3e85-207-102-214-250.ngrok-free.app/auth/youtube\";\n  };\n  const handleSpotifyLogin = () => {\n    window.location.href = \"https://3e85-207-102-214-250.ngrok-free.app/auth/spotify\";\n  };\n  const fetchYouTubePlaylists = async () => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await fetch(\"http://localhost:8080/playlists/youtube\");\n      if (!response.ok) throw new Error(\"Failed to fetch YouTube playlists\");\n      const data = await response.json();\n      setYouTubePlaylists(data.playlists);\n      setIsLoggedIn(true);\n    } catch (err) {\n      console.error(err);\n      setError(\"Error fetching YouTube playlists\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchSpotifyPlaylists = async () => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await fetch(\"http://localhost:8080/playlists/spotify\");\n      if (!response.ok) throw new Error(\"Failed to fetch Spotify playlists\");\n      const data = await response.json();\n      setSpotifyPlaylists(data.playlists);\n      setIsLoggedIn(true);\n    } catch (err) {\n      console.error(err);\n      setError(\"Error fetching Spotify playlists\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Playlist Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Manage your YouTube and Spotify playlists with ease.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), !isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button youtube\",\n          onClick: handleYouTubeLogin,\n          children: \"Sign in with YouTube\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button spotify\",\n          onClick: handleSpotifyLogin,\n          children: \"Sign in with Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fetch-button\",\n            onClick: fetchYouTubePlaylists,\n            children: \"Fetch YouTube Playlists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fetch-button\",\n            onClick: fetchSpotifyPlaylists,\n            children: \"Fetch Spotify Playlists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 37\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"YouTube Playlists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: youtubePlaylists.length > 0 ? youtubePlaylists.map((playlist, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: playlist\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No YouTube playlists found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Spotify Playlists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: spotifyPlaylists.length > 0 ? spotifyPlaylists.map((playlist, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: playlist\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No Spotify playlists found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"ybW/xFr4xWemq+uPfvVZCf/oomg=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","isLoggedIn","setIsLoggedIn","youtubePlaylists","setYouTubePlaylists","spotifyPlaylists","setSpotifyPlaylists","loading","setLoading","error","setError","handleYouTubeLogin","window","location","href","handleSpotifyLogin","fetchYouTubePlaylists","response","fetch","ok","Error","data","json","playlists","err","console","fetchSpotifyPlaylists","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","length","map","playlist","index","_c","$RefreshReg$"],"sources":["/Users/larrypark/Projects/PlaylistManager/PlaylistManager/frontend/src/components/Home.js"],"sourcesContent":["// src/components/Home.js\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport \"./../styles/Home.css\";\n\nfunction Home() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [youtubePlaylists, setYouTubePlaylists] = useState([]);\n    const [spotifyPlaylists, setSpotifyPlaylists] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(\"\");\n\n    const handleYouTubeLogin = () => {\n        window.location.href = \"https://3e85-207-102-214-250.ngrok-free.app/auth/youtube\";\n    };\n\n    const handleSpotifyLogin = () => {\n        window.location.href = \"https://3e85-207-102-214-250.ngrok-free.app/auth/spotify\";\n    };\n\n    const fetchYouTubePlaylists = async () => {\n        setLoading(true);\n        setError(\"\");\n        try {\n            const response = await fetch(\"http://localhost:8080/playlists/youtube\");\n            if (!response.ok) throw new Error(\"Failed to fetch YouTube playlists\");\n            const data = await response.json();\n            setYouTubePlaylists(data.playlists);\n            setIsLoggedIn(true);\n        } catch (err) {\n            console.error(err);\n            setError(\"Error fetching YouTube playlists\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const fetchSpotifyPlaylists = async () => {\n        setLoading(true);\n        setError(\"\");\n        try {\n            const response = await fetch(\"http://localhost:8080/playlists/spotify\");\n            if (!response.ok) throw new Error(\"Failed to fetch Spotify playlists\");\n            const data = await response.json();\n            setSpotifyPlaylists(data.playlists);\n            setIsLoggedIn(true);\n        } catch (err) {\n            console.error(err);\n            setError(\"Error fetching Spotify playlists\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"home-container\">\n            <div className=\"content\">\n                <h1>Welcome to Playlist Manager</h1>\n                <p>Manage your YouTube and Spotify playlists with ease.</p>\n\n                {/* Render login buttons if not logged in */}\n                {!isLoggedIn ? (\n                    <div className=\"buttons\">\n                        <button className=\"login-button youtube\" onClick={handleYouTubeLogin}>\n                            Sign in with YouTube\n                        </button>\n                        <button className=\"login-button spotify\" onClick={handleSpotifyLogin}>\n                            Sign in with Spotify\n                        </button>\n                    </div>\n                ) : (\n                    <>\n                        {/* Fetch and display playlists if logged in */}\n                        <div className=\"buttons\">\n                            <button className=\"fetch-button\" onClick={fetchYouTubePlaylists}>\n                                Fetch YouTube Playlists\n                            </button>\n                            <button className=\"fetch-button\" onClick={fetchSpotifyPlaylists}>\n                                Fetch Spotify Playlists\n                            </button>\n                        </div>\n\n                        {loading && <p>Loading...</p>}\n                        {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n                        <div>\n                            <h2>YouTube Playlists</h2>\n                            <ul>\n                                {youtubePlaylists.length > 0 ? (\n                                    youtubePlaylists.map((playlist, index) => (\n                                        <li key={index}>{playlist}</li>\n                                    ))\n                                ) : (\n                                    <p>No YouTube playlists found.</p>\n                                )}\n                            </ul>\n                        </div>\n\n                        <div>\n                            <h2>Spotify Playlists</h2>\n                            <ul>\n                                {spotifyPlaylists.length > 0 ? (\n                                    spotifyPlaylists.map((playlist, index) => (\n                                        <li key={index}>{playlist}</li>\n                                    ))\n                                ) : (\n                                    <p>No Spotify playlists found.</p>\n                                )}\n                            </ul>\n                        </div>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}