{"ast":null,"code":"var _jsxFileName = \"/Users/larrypark/Projects/PlaylistManager/PlaylistManager/frontend/src/components/Playlists.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"; // Import useParams\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlists = () => {\n  _s();\n  const {\n    service\n  } = useParams(); // Get the service parameter from the URL\n  const [playlists, setPlaylists] = useState([]);\n  useEffect(() => {\n    // Fetch playlists for the specified service\n    fetch(`https://3e85-207-102-214-250.ngrok-free.app/playlists/${service}`).then(response => response.json()).then(data => {\n      if (data.playlists) {\n        setPlaylists(data.playlists);\n      }\n    }).catch(err => console.error(\"Error fetching playlists:\", err));\n  }, [service]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [service.charAt(0).toUpperCase() + service.slice(1), \" Playlists\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: playlists.map((playlist, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: playlist\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(Playlists, \"3D64ruTNIThkjda7RDVRZLTkv7M=\", false, function () {\n  return [useParams];\n});\n_c = Playlists;\nexport default Playlists;\nvar _c;\n$RefreshReg$(_c, \"Playlists\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Playlists","_s","service","playlists","setPlaylists","fetch","then","response","json","data","catch","err","console","error","children","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","map","playlist","index","_c","$RefreshReg$"],"sources":["/Users/larrypark/Projects/PlaylistManager/PlaylistManager/frontend/src/components/Playlists.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"; // Import useParams\n\nconst Playlists = () => {\n    const { service } = useParams(); // Get the service parameter from the URL\n    const [playlists, setPlaylists] = useState([]);\n\n    useEffect(() => {\n        // Fetch playlists for the specified service\n        fetch(`https://3e85-207-102-214-250.ngrok-free.app/playlists/${service}`)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.playlists) {\n                    setPlaylists(data.playlists);\n                }\n            })\n            .catch((err) => console.error(\"Error fetching playlists:\", err));\n    }, [service]);\n\n    return (\n        <div>\n            <h1>{service.charAt(0).toUpperCase() + service.slice(1)} Playlists</h1>\n            <ul>\n                {playlists.map((playlist, index) => (\n                    <li key={index}>{playlist}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Playlists;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAQ,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EACjC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZ;IACAU,KAAK,CAAC,yDAAyDH,OAAO,EAAE,CAAC,CACpEI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZ,IAAIA,IAAI,CAACN,SAAS,EAAE;QAChBC,YAAY,CAACK,IAAI,CAACN,SAAS,CAAC;MAChC;IACJ,CAAC,CAAC,CACDO,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC,CAAC;EACxE,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;EAEb,oBACIH,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,GAAKZ,OAAO,CAACa,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGd,OAAO,CAACe,KAAK,CAAC,CAAC,CAAC,EAAC,YAAU;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvEtB,OAAA;MAAAe,QAAA,EACKX,SAAS,CAACmB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC3BzB,OAAA;QAAAe,QAAA,EAAiBS;MAAQ,GAAhBC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACpB,EAAA,CA1BID,SAAS;EAAA,QACSH,SAAS;AAAA;AAAA4B,EAAA,GAD3BzB,SAAS;AA4Bf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}