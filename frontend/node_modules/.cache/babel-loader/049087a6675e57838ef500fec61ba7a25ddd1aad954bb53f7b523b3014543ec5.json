{"ast":null,"code":"var _jsxFileName = \"/Users/larrypark/Projects/PlaylistManager/PlaylistManager/frontend/src/components/Playlists.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlists = ({\n  service\n}) => {\n  _s();\n  // Initialize the playlists state\n  const [playlists, setPlaylists] = useState([]);\n  useEffect(() => {\n    // Fetch playlists for the specified service\n    fetch(`https://3e85-207-102-214-250.ngrok-free.app/playlists/${service}`).then(response => response.json()).then(data => {\n      if (data.playlists) {\n        setPlaylists(data.playlists);\n      }\n    }).catch(err => console.error(\"Error fetching playlists:\", err));\n  }, [service]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlists-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: service === \"youtube\" ? \"YouTube Playlists\" : \"Spotify Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: playlists.map((playlist, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: playlist\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Playlists, \"/7UASZ0pXGZcrJioajU839hHwfM=\");\n_c = Playlists;\nexport default Playlists;\nvar _c;\n$RefreshReg$(_c, \"Playlists\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Playlists","service","_s","playlists","setPlaylists","fetch","then","response","json","data","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","playlist","index","_c","$RefreshReg$"],"sources":["/Users/larrypark/Projects/PlaylistManager/PlaylistManager/frontend/src/components/Playlists.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Playlists = ({ service }) => {\n    // Initialize the playlists state\n    const [playlists, setPlaylists] = useState([]);\n\n    useEffect(() => {\n        // Fetch playlists for the specified service\n        fetch(`https://3e85-207-102-214-250.ngrok-free.app/playlists/${service}`)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.playlists) {\n                    setPlaylists(data.playlists);\n                }\n            })\n            .catch((err) => console.error(\"Error fetching playlists:\", err));\n    }, [service]);\n\n\n\n    return (\n        <div className=\"playlists-container\">\n            <h1>{service === \"youtube\" ? \"YouTube Playlists\" : \"Spotify Playlists\"}</h1>\n            <ul>\n                {playlists.map((playlist, index) => (\n                    <li key={index}>{playlist}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Playlists;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC/B;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ;IACAQ,KAAK,CAAC,yDAAyDJ,OAAO,EAAE,CAAC,CACpEK,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZ,IAAIA,IAAI,CAACN,SAAS,EAAE;QAChBC,YAAY,CAACK,IAAI,CAACN,SAAS,CAAC;MAChC;IACJ,CAAC,CAAC,CACDO,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC,CAAC;EACxE,CAAC,EAAE,CAACV,OAAO,CAAC,CAAC;EAIb,oBACIF,OAAA;IAAKe,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChChB,OAAA;MAAAgB,QAAA,EAAKd,OAAO,KAAK,SAAS,GAAG,mBAAmB,GAAG;IAAmB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5EpB,OAAA;MAAAgB,QAAA,EACKZ,SAAS,CAACiB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC3BvB,OAAA;QAAAgB,QAAA,EAAiBM;MAAQ,GAAhBC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACjB,EAAA,CA5BIF,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}