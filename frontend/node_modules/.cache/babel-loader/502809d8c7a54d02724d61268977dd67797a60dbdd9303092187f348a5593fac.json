{"ast":null,"code":"var _jsxFileName = \"/Users/larrypark/Projects/PlaylistManager/PlaylistManager/frontend/src/components/Playlists.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./../styles/Playlists.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlists = () => {\n  _s();\n  const {\n    service\n  } = useParams();\n  const [playlists, setPlaylists] = useState([]);\n  const [expandedPlaylist, setExpandedPlaylist] = useState(null);\n  const [songs, setSongs] = useState({});\n  useEffect(() => {\n    fetch(`https://localhost:8080/playlists/${service}`).then(response => response.json()).then(data => {\n      console.log(\"Fetched playlists:\", data); // Debug log\n      if (data.playlists) {\n        setPlaylists(data.playlists);\n      }\n    }).catch(err => console.error(\"Error fetching playlists:\", err));\n  }, [service]);\n  const handleExpand = playlistId => {\n    setExpandedPlaylist(prev => prev === playlistId ? null : playlistId);\n    if (!songs[playlistId]) {\n      fetch(`https://localhost:8080/playlists/${service}/${playlistId}/songs`).then(response => response.json()).then(data => {\n        console.log(\"Fetched songs:\", data); // Debug log\n        if (data.songs) {\n          setSongs(prev => ({\n            ...prev,\n            [playlistId]: data.songs\n          }));\n        }\n      }).catch(err => console.error(\"Error fetching songs:\", err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [service.charAt(0).toUpperCase() + service.slice(1), \" Playlists\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleExpand(playlist.id),\n          children: playlist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), expandedPlaylist === playlist.id && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: songs[playlist.id] ? songs[playlist.id].map((song, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: song.title\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 41\n          }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Loading songs...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)]\n      }, playlist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Playlists, \"41P88vb2FKmixlu9KP6KkNB5AR4=\", false, function () {\n  return [useParams];\n});\n_c = Playlists;\nexport default Playlists;\nvar _c;\n$RefreshReg$(_c, \"Playlists\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Playlists","_s","service","playlists","setPlaylists","expandedPlaylist","setExpandedPlaylist","songs","setSongs","fetch","then","response","json","data","console","log","catch","err","error","handleExpand","playlistId","prev","children","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","map","playlist","onClick","id","name","song","idx","title","_c","$RefreshReg$"],"sources":["/Users/larrypark/Projects/PlaylistManager/PlaylistManager/frontend/src/components/Playlists.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./../styles/Playlists.css\";\n\nconst Playlists = () => {\n    const { service } = useParams();\n    const [playlists, setPlaylists] = useState([]);\n    const [expandedPlaylist, setExpandedPlaylist] = useState(null);\n    const [songs, setSongs] = useState({});\n\n    useEffect(() => {\n        fetch(`https://localhost:8080/playlists/${service}`)\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(\"Fetched playlists:\", data); // Debug log\n                if (data.playlists) {\n                    setPlaylists(data.playlists);\n                }\n            })\n            .catch((err) => console.error(\"Error fetching playlists:\", err));\n    }, [service]);\n\n    const handleExpand = (playlistId) => {\n        setExpandedPlaylist((prev) => (prev === playlistId ? null : playlistId));\n        if (!songs[playlistId]) {\n            fetch(`https://localhost:8080/playlists/${service}/${playlistId}/songs`)\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log(\"Fetched songs:\", data); // Debug log\n                    if (data.songs) {\n                        setSongs((prev) => ({\n                            ...prev,\n                            [playlistId]: data.songs,\n                        }));\n                    }\n                })\n                .catch((err) => console.error(\"Error fetching songs:\", err));\n        }\n    };\n\n    return (\n        <div>\n            <h1>{service.charAt(0).toUpperCase() + service.slice(1)} Playlists</h1>\n            <ul>\n                {playlists.map((playlist) => (\n                    <li key={playlist.id}>\n                        <div onClick={() => handleExpand(playlist.id)}>\n                            {playlist.name}\n                        </div>\n                        {expandedPlaylist === playlist.id && (\n                            <ul>\n                                {songs[playlist.id] ? (\n                                    songs[playlist.id].map((song, idx) => (\n                                        <li key={idx}>{song.title}</li>\n                                    ))\n                                ) : (\n                                    <li>Loading songs...</li>\n                                )}\n                            </ul>\n                        )}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Playlists;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}